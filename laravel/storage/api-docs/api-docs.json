{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/artisans": {
            "get": {
                "tags": [
                    "Artisan"
                ],
                "summary": "Get all Artisans",
                "description": "Display a listing of the resource.",
                "operationId": "4997942c6261ddbf23a4879bcf598e0e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Artisan"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Artisan"
                ],
                "summary": "Create a new Artisan",
                "description": "Store a newly created resource in storage.",
                "operationId": "7a589e653b95179b9169cee7359a2ff9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Artisan"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Artisan created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artisan"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/artisans/{id}": {
            "get": {
                "tags": [
                    "Artisan"
                ],
                "summary": "Get a specific Artisan by ID",
                "description": "Display the specified resource.",
                "operationId": "0c08e1b4e8f3ba57f7778bcba63be4cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Artisan ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artisan"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artisan not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Artisan"
                ],
                "summary": "Update a specific Artisan by ID",
                "description": "Update the specified resource in storage.",
                "operationId": "a68d608734b30c4384a89627c88e0cb5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Artisan ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Artisan"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Artisan updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artisan"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artisan not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Artisan"
                ],
                "summary": "Delete a specific Artisan by ID",
                "description": "Remove the specified resource from storage.",
                "operationId": "98ae49f03469266ed3a8f1df86414453",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Artisan ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Artisan deleted successfully"
                    },
                    "404": {
                        "description": "Artisan not found"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "573de1fed352c1205a32c4d1b9877375",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "adresse": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "enum": [
                                            "Consumers",
                                            "Artisans",
                                            "DeliveryPersonnel"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "User created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/consumers": {
            "get": {
                "tags": [
                    "Consumer"
                ],
                "summary": "Get all Consumers",
                "description": "Display a listing of the resource.",
                "operationId": "39606af6450e02dac37b094b7e141744",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Consumer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Consumer"
                ],
                "summary": "Create a new Consumer",
                "description": "Store a newly created resource in storage.",
                "operationId": "e89bd3292e20158fb85d8b85ed25cb90",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Consumer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/consumers/{id}": {
            "get": {
                "tags": [
                    "Consumer"
                ],
                "summary": "Get a specific Consumer by ID",
                "description": "Display the specified resource.",
                "operationId": "2d4557cac212e72d79c67bf715ba7b3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Consumer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consumer not found"
                    }
                }
            }
        },
        "/api/consumers/{id}": {
            "put": {
                "tags": [
                    "Consumer"
                ],
                "summary": "Update a specific Consumer by ID",
                "description": "Update the specified resource in storage.",
                "operationId": "034ae4e87f1bc77a755cd0bc37db0f0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Consumer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Consumer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consumer not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Consumer"
                ],
                "summary": "Delete a specific Consumer by ID",
                "description": "Remove the specified resource from storage.",
                "operationId": "320b22d41bfc9d9102ad5f7fda3af395",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Consumer ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Consumer deleted successfully"
                    },
                    "404": {
                        "description": "Consumer not found"
                    }
                }
            }
        },
        "/api/deliveryPersonnels": {
            "get": {
                "tags": [
                    "DeliveryPersonnel"
                ],
                "summary": "Get all Delivery Personnel",
                "description": "Display a listing of the resource.",
                "operationId": "8b6686ba622cdce6f0afcf25c0ba3a41",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DeliveryPersonnel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DeliveryPersonnel"
                ],
                "summary": "Create a new Delivery Personnel",
                "description": "Store a newly created resource in storage.",
                "operationId": "ee5983ffabf4f02c844c0bd01c470fba",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryPersonnel"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Delivery Personnel created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryPersonnel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/deliveryPersonnels/{id}": {
            "get": {
                "tags": [
                    "DeliveryPersonnel"
                ],
                "summary": "Get a specific Delivery Personnel by ID",
                "description": "Display the specified resource.",
                "operationId": "0bfdfbcd59c5c38c37430da30c27cc82",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delivery Personnel ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryPersonnel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Delivery Personnel not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "DeliveryPersonnel"
                ],
                "summary": "Update a specific Delivery Personnel by ID",
                "description": "Update the specified resource in storage.",
                "operationId": "c32e5e1b5db82a93be8fc6a9f3757af3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delivery Personnel ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryPersonnel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Delivery Personnel updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryPersonnel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Delivery Personnel not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "DeliveryPersonnel"
                ],
                "summary": "Delete a specific Delivery Personnel by ID",
                "description": "Remove the specified resource from storage.",
                "operationId": "cbc3453513e2cc8b2fbe93b8832bb4c4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delivery Personnel ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delivery Personnel deleted successfully"
                    },
                    "404": {
                        "description": "Delivery Personnel not found"
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of orders",
                "description": "Returns list of orders",
                "operationId": "getOrdersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No orders found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Store a new order",
                "description": "Stores a new order",
                "operationId": "storeOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a specific order",
                "description": "Returns a specific order",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update a specific order",
                "description": "Updates a specific order",
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete a specific order",
                "description": "Deletes a specific order",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/api/OrderProducts": {
            "get": {
                "tags": [
                    "OrderProduct"
                ],
                "summary": "Get all OrderProducts",
                "description": "Display a listing of the resource.",
                "operationId": "d0c5d025ea7fff24b93d411d126bc0bc",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderProduct"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "OrderProduct"
                ],
                "summary": "Create a new OrderProduct",
                "description": "Store a newly created resource in storage.",
                "operationId": "d5dfdadb28304c0af03865895b6048d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OrderProduct created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderProduct"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/OrderProducts/{id}": {
            "get": {
                "tags": [
                    "OrderProduct"
                ],
                "summary": "Get a specific OrderProduct by ID",
                "description": "Display the specified resource.",
                "operationId": "a79df01ece44fda779970ad1f84562e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OrderProduct ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderProduct"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "OrderProduct not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "OrderProduct"
                ],
                "summary": "Update a specific OrderProduct by ID",
                "description": "Update the specified resource in storage.",
                "operationId": "5971c6cd3c22cbe3efc6ebb9e2f82977",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OrderProduct ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OrderProduct updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderProduct"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "OrderProduct not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OrderProduct"
                ],
                "summary": "Delete a specific OrderProduct by ID",
                "description": "Remove the specified resource from storage.",
                "operationId": "fe3e13b64933c6dd3ab7b60e4c9b6b3f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OrderProduct ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OrderProduct deleted successfully"
                    },
                    "404": {
                        "description": "OrderProduct not found"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns list of products",
                "operationId": "getProductsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Store a new product",
                "description": "Stores a new product",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product",
                "description": "Returns a specific product",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a specific product",
                "description": "Updates a specific product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a specific product",
                "description": "Deletes a specific product",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/ratings": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get list of ratings",
                "description": "Returns list of ratings",
                "operationId": "getRatingsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No ratings found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Store a new rating",
                "description": "Stores a new rating",
                "operationId": "storeRating",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "description": "Numeric rating value",
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "ratingType": {
                                        "description": "Type of rating (DeliveryPersonnel, Product, Artisan)",
                                        "type": "string",
                                        "enum": [
                                            "DeliveryPersonnel",
                                            "Product",
                                            "Artisan"
                                        ],
                                        "example": "Product"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rating stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/ratings/{id}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get a rating by its ID",
                "description": "Returns a rating",
                "operationId": "getRatingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Update an existing rating",
                "description": "Updates an existing rating",
                "operationId": "updateRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "description": "Numeric rating value",
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "ratingType": {
                                        "description": "Type of rating (DeliveryPersonnel, Product, Artisan)",
                                        "type": "string",
                                        "enum": [
                                            "DeliveryPersonnel",
                                            "Product",
                                            "Artisan"
                                        ],
                                        "example": "Product"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Delete a rating",
                "description": "Deletes a rating",
                "operationId": "destroyRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rating deleted successfully"
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all Users",
                "description": "Display a listing of the resource.",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new User",
                "description": "Store a newly created resource in storage.",
                "operationId": "a1fce870c566eb5fc0cf3178ec5d2fed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a specific User by ID",
                "description": "Display the specified resource.",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update a specific User by ID",
                "description": "Update the specified resource in storage.",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a specific User by ID",
                "description": "Remove the specified resource from storage.",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Artisan": {
                "properties": {
                    "id": {
                        "description": "Artisan ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "Artisan creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Artisan update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Consumer": {
                "properties": {
                    "id": {
                        "description": "Consumer ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "Consumer creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Consumer update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "order": {
                        "$ref": "#/components/schemas/Order"
                    }
                },
                "type": "object"
            },
            "DeliveryPersonnel": {
                "properties": {
                    "id": {
                        "description": "DeliveryPersonnel ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "DeliveryPersonnel creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "DeliveryPersonnel update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Order": {
                "properties": {
                    "id": {
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "orderDate": {
                        "description": "Order date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "orderStatus": {
                        "description": "Order status",
                        "type": "string"
                    },
                    "deliveryAddress": {
                        "description": "Delivery address",
                        "type": "string"
                    },
                    "consumer_id": {
                        "description": "ID of the associated consumer",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "Order creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Order update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deliveryPersonnel": {
                        "$ref": "#/components/schemas/DeliveryPersonnel"
                    },
                    "consumer": {
                        "$ref": "#/components/schemas/Consumer"
                    },
                    "orderProducts": {
                        "description": "Related OrderProducts",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderProduct"
                        }
                    }
                },
                "type": "object"
            },
            "OrderProduct": {
                "properties": {
                    "id": {
                        "description": "OrderProduct ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "description": "OrderProduct quantity",
                        "type": "integer"
                    },
                    "order": {
                        "$ref": "#/components/schemas/Order"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "created_at": {
                        "description": "OrderProduct creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "OrderProduct update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Product name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string"
                    },
                    "pricePerPiece": {
                        "description": "Product price per piece",
                        "type": "number",
                        "format": "float"
                    },
                    "minOrder": {
                        "description": "Minimum order quantity",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Product type",
                        "type": "string",
                        "enum": [
                            "Sugar",
                            "Salt"
                        ]
                    },
                    "childType": {
                        "description": "Product child type",
                        "type": "string"
                    },
                    "images": {
                        "description": "Product images",
                        "type": "json"
                    },
                    "ratings": {
                        "description": "Related Ratings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rating"
                        }
                    },
                    "artisan": {
                        "$ref": "#/components/schemas/Artisan"
                    },
                    "orderProducts": {
                        "description": "Related OrderProducts",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderProduct"
                        }
                    },
                    "created_at": {
                        "description": "Product creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Product update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Rating": {
                "properties": {
                    "id": {
                        "description": "Rating ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "rating": {
                        "description": "Numeric rating value",
                        "type": "integer"
                    },
                    "ratingType": {
                        "description": "Type of rating (DeliveryPersonnel, Product, Artisan)",
                        "type": "string",
                        "enum": [
                            "DeliveryPersonnel",
                            "Product",
                            "Artisan"
                        ]
                    },
                    "created_at": {
                        "description": "Rating creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Rating update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "delivery_personnel": {
                        "$ref": "#/components/schemas/DeliveryPersonnel"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "artisan": {
                        "$ref": "#/components/schemas/Artisan"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "User first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "User last name",
                        "type": "string"
                    },
                    "description": {
                        "description": "User description",
                        "type": "string"
                    },
                    "adresse": {
                        "description": "User address",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "User phone number",
                        "type": "string"
                    },
                    "user_type": {
                        "description": "User type",
                        "type": "string",
                        "enum": [
                            "Artisan",
                            "Consumer",
                            "DeliveryPersonnel"
                        ]
                    },
                    "created_at": {
                        "description": "User creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "User update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deliveryPersonnel": {
                        "$ref": "#/components/schemas/DeliveryPersonnel"
                    },
                    "artisan": {
                        "$ref": "#/components/schemas/Artisan"
                    },
                    "consumer": {
                        "$ref": "#/components/schemas/Consumer"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}